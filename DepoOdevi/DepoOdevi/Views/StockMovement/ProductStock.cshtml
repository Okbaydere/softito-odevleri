@model IEnumerable<Entity.Concrete.StockMovement>
@{
    ViewBag.Title = "Ürün Stok Hareketleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var product = ViewBag.Product as Entity.Concrete.Product;
    var currentStock = ViewBag.CurrentStock;
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">@product.ProductName - Stok Hareketleri</h3>
        <div class="card-tools">
            <a href="@Url.Action("Details", "Product", new { id = product.ProductId })" class="btn btn-secondary btn-sm">
                <i class="fas fa-arrow-left"></i> Ürün Detayına Dön
            </a>
            <a href="@Url.Action("Create", "StockMovement")" class="btn btn-primary btn-sm">
                <i class="fas fa-plus"></i> Yeni Stok Hareketi
            </a>
        </div>
    </div>
    <div class="card-body">
        <div class="row mb-4">
            <div class="col-md-3">
                <div class="card bg-info text-white">
                    <div class="card-body">
                        <h5 class="card-title">Mevcut Stok</h5>
                        <h2>@product.Stock</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-warning text-white">
                    <div class="card-body">
                        <h5 class="card-title">Minimum Stok</h5>
                        <h2>@product.MinimumStock</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-success text-white">
                    <div class="card-body">
                        <h5 class="card-title">Alış Fiyatı</h5>
                        <h2>@string.Format("{0:C2}", product.PurchasePrice)</h2>
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card bg-primary text-white">
                    <div class="card-body">
                        <h5 class="card-title">Satış Fiyatı</h5>
                        <h2>@string.Format("{0:C2}", product.SalePrice)</h2>
                    </div>
                </div>
            </div>
        </div>

        <div class="row mb-3">
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="card-title">Ürün Bilgileri</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>Kategori:</strong> @product.Category.CategoryName</p>
                        <p><strong>Tedarikçi:</strong> @product.Supplier.CompanyName</p>
                        <p><strong>Barkod:</strong> @(string.IsNullOrEmpty(product.Barcode) ? "-" : product.Barcode)</p>
                        <p><strong>Marka:</strong> @(string.IsNullOrEmpty(product.Brand) ? "-" : product.Brand)</p>
                        <p><strong>Son Alım Tarihi:</strong> @(product.LastPurchaseDate.HasValue ? product.LastPurchaseDate.Value.ToString("dd/MM/yyyy") : "-")</p>
                    </div>
                </div>
            </div>
            <div class="col-md-6">
                <div class="card">
                    <div class="card-header bg-light">
                        <h5 class="card-title">Stok Özeti</h5>
                    </div>
                    <div class="card-body">
                        <p><strong>Toplam Giriş:</strong> @Model.Where(m => m.MovementType == "Giriş").Sum(m => m.Quantity)</p>
                        <p><strong>Toplam Çıkış:</strong> @Model.Where(m => m.MovementType == "Çıkış").Sum(m => m.Quantity)</p>
                        <p><strong>Toplam Satış:</strong> @Model.Where(m => m.MovementType == "Satış").Sum(m => m.Quantity)</p>
                        <p><strong>Toplam İade:</strong> @Model.Where(m => m.MovementType == "İade").Sum(m => m.Quantity)</p>
                        <p><strong>Toplam Hareket Sayısı:</strong> @Model.Count()</p>
                    </div>
                </div>
            </div>
        </div>

        <h4 class="mt-4">Stok Hareketleri</h4>
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Hareket Tipi</th>
                    <th>Miktar</th>
                    <th>Birim Fiyat</th>
                    <th>Çalışan</th>
                    <th>Tarih</th>
                    <th>Açıklama</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.OrderByDescending(m => m.MovementDate))
                {
                    <tr>
                        <td>
                            @if (item.MovementType == "Giriş")
                            {
                                <span class="badge bg-success">@item.MovementType</span>
                            }
                            else if (item.MovementType == "Çıkış")
                            {
                                <span class="badge bg-danger">@item.MovementType</span>
                            }
                            else if (item.MovementType == "Sayım")
                            {
                                <span class="badge bg-info">@item.MovementType</span>
                            }
                            else if (item.MovementType == "Satış")
                            {
                                <span class="badge bg-primary">@item.MovementType</span>
                            }
                            else if (item.MovementType == "İade")
                            {
                                <span class="badge bg-warning">@item.MovementType</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">@item.MovementType</span>
                            }
                        </td>
                        <td>@item.Quantity</td>
                        <td>@(item.UnitPrice.HasValue ? string.Format("{0:C2}", item.UnitPrice) : "-")</td>
                        <td>@($"{item.Employee.FirstName} {item.Employee.LastName}")</td>
                        <td>@item.MovementDate.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>@(string.IsNullOrEmpty(item.Description) ? "-" : item.Description)</td>
                        <td>
                            <a href="@Url.Action("Details", "StockMovement", new { id = item.StockMovementId })" class="btn btn-primary btn-sm">
                                <i class="fas fa-search"></i> Detay
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div> 