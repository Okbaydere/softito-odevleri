@model IEnumerable<Entity.Concrete.StockMovement>
@{
    ViewBag.Title = "Stok Hareketleri";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Stok Hareketleri</h3>
        <div class="card-tools">
            <a href="@Url.Action("Create", "StockMovement")" class="btn btn-primary btn-sm">
                <i class="fas fa-plus"></i> Yeni Stok Hareketi
            </a>
        </div>
    </div>
    <div class="card-body">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>Ürün</th>
                    <th>Hareket Tipi</th>
                    <th>Miktar</th>
                    <th>Birim Fiyat</th>
                    <th>Çalışan</th>
                    <th>Tarih</th>
                    <th>İşlemler</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td>@item.Product.ProductName</td>
                        <td>
                            @if (item.MovementType == "Giriş")
                            {
                                <span class="badge bg-success">@item.MovementType</span>
                            }
                            else if (item.MovementType == "Çıkış")
                            {
                                <span class="badge bg-danger">@item.MovementType</span>
                            }
                            else if (item.MovementType == "Sayım")
                            {
                                <span class="badge bg-info">@item.MovementType</span>
                            }
                            else if (item.MovementType == "Satış")
                            {
                                <span class="badge bg-primary">@item.MovementType</span>
                            }
                            else if (item.MovementType == "İade")
                            {
                                <span class="badge bg-warning">@item.MovementType</span>
                            }
                            else
                            {
                                <span class="badge bg-secondary">@item.MovementType</span>
                            }
                        </td>
                        <td>@item.Quantity</td>
                        <td>@(item.UnitPrice.HasValue ? string.Format("{0:C2}", item.UnitPrice) : "-")</td>
                        <td>@($"{item.Employee.FirstName} {item.Employee.LastName}")</td>
                        <td>@item.MovementDate.ToString("dd/MM/yyyy HH:mm")</td>
                        <td>
                            <a href="@Url.Action("Details", "StockMovement", new { id = item.StockMovementId })" class="btn btn-primary btn-sm">
                                <i class="fas fa-search"></i> Detay
                            </a>
                            <a href="@Url.Action("Edit", "StockMovement", new { id = item.StockMovementId })" class="btn btn-info btn-sm">
                                <i class="fas fa-edit"></i> Düzenle
                            </a>
                            <a href="@Url.Action("Delete", "StockMovement", new { id = item.StockMovementId })" class="btn btn-danger btn-sm">
                                <i class="fas fa-trash"></i> Sil
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div> 