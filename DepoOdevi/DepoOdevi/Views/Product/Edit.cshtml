@model Entity.Concrete.Product
@{
    ViewBag.Title = "Ürün Düzenle";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="card">
    <div class="card-header">
        <h3 class="card-title">Ürün Düzenle</h3>
        <div class="card-tools">
            <a href="@Url.Action("Index", "Product")" class="btn btn-secondary btn-sm">
                <i class="fas fa-arrow-left"></i> Listeye Dön
            </a>
        </div>
    </div>
    <div class="card-body">
        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.ProductId)

            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.ProductName, "Ürün Adı", new { @class = "control-label" })
                        @Html.EditorFor(model => model.ProductName, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.ProductName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.CategoryId, "Kategori", new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.CategoryId, ViewBag.CategoryList as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SupplierId, "Tedarikçi", new { @class = "control-label" })
                        @Html.DropDownListFor(model => model.SupplierId, ViewBag.SupplierList as List<SelectListItem>, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.SupplierId, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Brand, "Marka", new { @class = "control-label" })
                        @Html.EditorFor(model => model.Brand, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Brand, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Barcode, "Barkod", new { @class = "control-label" })
                        @Html.EditorFor(model => model.Barcode, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Barcode, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Stock, "Stok Miktarı", new { @class = "control-label" })
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MinimumStock, "Minimum Stok", new { @class = "control-label" })
                        @Html.EditorFor(model => model.MinimumStock, new { htmlAttributes = new { @class = "form-control", type = "number" } })
                        @Html.ValidationMessageFor(model => model.MinimumStock, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.PurchasePrice, "Alış Fiyatı", new { @class = "control-label" })
                        @Html.EditorFor(model => model.PurchasePrice, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                        @Html.ValidationMessageFor(model => model.PurchasePrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.SalePrice, "Satış Fiyatı", new { @class = "control-label" })
                        @Html.EditorFor(model => model.SalePrice, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01" } })
                        @Html.ValidationMessageFor(model => model.SalePrice, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastPurchaseDate, "Son Alım Tarihi", new { @class = "control-label" })
                        @Html.EditorFor(model => model.LastPurchaseDate, new { htmlAttributes = new { @class = "form-control", type = "date" } })
                        @Html.ValidationMessageFor(model => model.LastPurchaseDate, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Description, "Açıklama", new { @class = "control-label" })
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", rows = "4" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>

            <div class="form-group mt-4">
                <button type="submit" class="btn btn-primary">
                    <i class="fas fa-save"></i> Kaydet
                </button>
                <a href="@Url.Action("Index", "Product")" class="btn btn-secondary">
                    <i class="fas fa-times"></i> İptal
                </a>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
} 